# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BT7yuwXT-XB2_COhKbIWyzikSw91Gw4j
"""

import math

# Definición de la clase Figure (simulando una interfaz)
class Figure:
    def getColor(self):
        raise NotImplementedError("Subclass must implement getColor method")

    def perimeter(self):
        raise NotImplementedError("Subclass must implement perimeter method")

    def area(self):
        raise NotImplementedError("Subclass must implement area method")

# Clase Triángulo
class Triangle(Figure):
    def __init__(self, color, base, height, side1, side2, side3):
        self.color = color
        self.base = base
        self.height = height
        self.side1 = side1
        self.side2 = side2
        self.side3 = side3

    def getColor(self):
        return self.color

    def perimeter(self):
        return self.side1 + self.side2 + self.side3

    def area(self):
        return 0.5 * self.base * self.height

# Clase Círculo
class Circle(Figure):
    def __init__(self, color, radius):
        self.color = color
        self.radius = radius

    def getColor(self):
        return self.color

    def perimeter(self):
        return 2 * math.pi * self.radius

    def area(self):
        return math.pi * (self.radius ** 2)

# Clase Rectángulo
class Rectangle(Figure):
    def __init__(self, color, width, height):
        self.color = color
        self.width = width
        self.height = height

    def getColor(self):
        return self.color

    def perimeter(self):
        return 2 * (self.width + self.height)

    def area(self):
        return self.width * self.height

# Clase Hexágono
class Hexagon(Figure):
    def __init__(self, color, side):
        self.color = color
        self.side = side

    def getColor(self):
        return self.color

    def perimeter(self):
        return 6 * self.side

    def area(self):
        return 1.5 * math.sqrt(3) * (self.side ** 2)

# Demostración de polimorfismo
def main():
    triangle = Triangle("Rojo", 3, 4, 5, 5, 5)
    circle = Circle("Azul", 7)
    rectangle = Rectangle("Verde", 6, 8)
    hexagon = Hexagon("Negro", 4)

    figures = [triangle, circle, rectangle, hexagon]

    for figure in figures:
        print(f"Figura: {type(figure).__name__}")
        print(f"Color: {figure.getColor()}")
        print(f"Perímetro: {figure.perimeter()}")
        print(f"Área: {figure.area()}")
        print()

if __name__ == "__main__":
    main()